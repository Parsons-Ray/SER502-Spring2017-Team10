0. What's the grammar it support.
arithmatic expression using: 
a. positive number as operands,
b. + - * / div mod as operators
c. support the parenthesis to change the priority.
d. using ";" indicate the end of one statement.
e. evaluating using left associative.

1. How to build the program
Using GUN make, type the "make" it will generate the compiler and runtime for you.

2. How to run the program
a. only compiler: "./compiler" will start an interactive command interface with the comipler. Put in the statement, it will emmit the abstract syntax tree in post-order traval. Using Ctrl+D(^D) to triger an EOF to quit the interactive mode.

e.g:
Input:
1 + 4 div 2;
^D

Output:
1
4
2
DIV
+

If you have a syntax error, it will emit the error and exit.

b. only runtime: "./runtime" will start an interactive command interface with the runtime. Put in the abstract syntax tree in post-order traval, it will produce the result. Using Ctrl+D(^D) to triger an EOF to quit the interactive mode.

e.g:
Input:
1
4
2
DIV
+
^D

Output:
3

c. combine compiler and runtime into a pipeline:
assume we stroed the program in the program.txt.
"cat program.txt | ./compiler | ./runtime"

e.g:
content in program.txt:
1 + 2 * 3;
(1 + 2) * 3;
4 div 2 + 3 mod 4;
4 div 2 * 3 mod 4;

"cat program.txt | ./compiler | ./runtime"

Output:
7
9
5
2

3. Contact me: tobielf@gmail.com

Have fun.